name: deploy to development on merge toc master branch
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
jobs:
  build:
    name: Build job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Declare variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build the tagged Docker image
        run: docker build . --file Dockerfile --tag poornimak/wordpressapp:${{steps.vars.outputs.sha_short}}
      - name: Push the tagged Docker image
        run: docker push poornimak/wordpressapp:${{steps.vars.outputs.sha_short}}

  deploy:
    name: Deploy job
    runs-on: ubuntu-latest
    container:
      image: ministryofjustice/cloud-platform-tools:1.21
    steps:
      - name: Deploy to kubernetes
        run: |
          echo -n ${{ secrets.CA_CERT }} | base64 -d > ./ca.crt
          kubectl config set-cluster ${{ secrets.CLUSTER_NAME }} --certificate-authority=./ca.crt --server=https://api.${{ secrets.CLUSTER_NAME }}
          kubectl config set-credentials gh-action --token=${{ secrets.CA_TOKEN }}
          kubectl config set-context ${{ secrets.CLUSTER_NAME }} --cluster=${{ secrets.CLUSTER_NAME }} --user=gh-action --namespace=${{ secrets.NAMESPACE }}
          kubectl config use-context ${{ secrets.CLUSTER_NAME }}
          kubectl get pods --namespace ${{ secrets.NAMESPACE }}
          kubectl set image deployment wordpress poornimak/wordpressapp:${{steps.build.vars.outputs.sha_short}} --namespace=${{ secrets.NAMESPACE }}
          kubectl rollout status deployment wordpress --namespace=${{ secrets.NAMESPACE }}
        env:
          KUBE_ENV_DEV_NAME: ${{ secrets.CLUSTER_NAME }}
          KUBE_ENV_DEV_NAMESPACE: ${{ secrets.NAMESPACE }}
          KUBE_ENV_DEV_CACERT: ${{ secrets.CA_CERT }}
          KUBE_ENV_DEV_TOKEN: ${{ secrets.CA_TOKEN }}
